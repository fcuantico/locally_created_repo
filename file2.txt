This files describes the exercises
done to learn github commands and protocols:

1. The first exercise was to creat a repository
from github and locally. In this step the most important 
thing is the URL address to github to be able to host
the files.

2. Then a file was created locally and the push command
was introduced to be able to "upoload" files locally to github.
Here the key was the command "git push"

3. Then a change was done to previous created file, and was saved
in the local repo, to then push it to github.

4. The next exercise is about changing file names and deleting files.
To that end we will work with a temporary file. The idea here is that all
changes that are done must be commited and then pushed to github.

5. Exercise 7 is about moving in time to different commits, the key
command is git checkout <commit address>, then to move back to the current
state we use git checkout main

6. Exercise 8 has to do with adding labels to previous commits. Note all
tags are created locaaly and then pushed to github. The key
commands are:

- Adding a tag Locally
git tag -a <tagname> -m "descriptive message"

- Checkout a tag
git checkout tags/<tagname>

- Pushing a tag to github
git push origin <tagname>

- Deletign a tag name locally
git tag -d <tagname>

- Deleting a tag in github
git push -d origin <tagname>

- list tags
git tag

7. What now follows is exercise 9 is about collaboration and working on the same files.
We use:
- git pull to pull the commits from the remote repo to our local repo
- git will merge a file that have change locally and in the remote repo, as long 
as the changes are not in the same line
- git will notify when changes of the same file happen in the same line, by indicating
there is a conflict, so that the user will have to do the correspoding changes.

8. Exercise 10. This is about BRANCH creation, which are copies of the original project
where we can work on without affecting the main project or main branch. The key commands are
- Branch Creation:
  git branch -c branch name
  git checkout -b branch name (creates the branch and moves you to that branch)
  
- Branch Deletion
  git branch -d branch name
  through git hub (is easier)
  
- Branch Push
  git push --set-upstream origin branch name
  
- Branch Change
  git checkout branch name

9. Exercise 11. This is about holding your work to move to other branches without affecting other's work
The key concept here is the STASH concept and the stash git command. The comands are:

- git stash save <stash name> <--- Put your current work on hold in a "reserve state"
- git stash list <--- list all your stashes
- git stash pop <-- pops your last stash

10. Exercise 12 .This is about how to merge a branch to the main(or other possible branch). The are two forms to do this
- through git hub (that is the merge is done in github)
- Locally, by using the following commands:
  1. git diff branch1...branch2
  2. move to branch you want to merge into
  3. git merge branch name (branch you want to merge with)
  

